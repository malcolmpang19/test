name: CI/CD Pipeline for Main Branch

on:
  push:
    branches:
      - main

jobs:
  ci-pipeline:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Check out the repository
        uses: actions/checkout@v3
        
      - name: Show GITHUB_TOKEN permissions
        run: |
          export GITHUB_TOKEN=your_token_here
          curl -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/user
      
      # Step 2: Run Super Linter
      - name: Run Super Linter
        uses: github/super-linter@v5
        continue-on-error: true
        env:
          DEFAULT_BRANCH: main
          VALIDATE_ALL_CODEBASE: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

     # Step 3: Run Tests
      - name: Run Unit Tests
        run: |
          # Example: Run tests with a JavaScript framework like Jest
          npm install
          npm test

      # Step 4: Perform Security Scans
      - name: Run Security Scan
        run: |
          # Example: Use npm audit for Node.js projects
          npm audit --production

      # Step 5: Benchmark Performance
      - name: Run Performance Benchmark
        run: |
          # Example: Run a custom benchmark script
          node benchmark.js

  update-repo:
    runs-on: self-hosted

    steps:
      # Step 7: Check out the repository
      - name: Check out the repository
        uses: actions/checkout@v3

      # Step 8: Set correct permissions for the repository on the server
      - name: Set correct permissions for the repository
        run: |
          sudo chown -R $(whoami):$(whoami) /var/www/html/test
          sudo chmod -R u+rw /var/www/html/test

      # Step 9: Push updates to the RHEL server repository
      - name: Push updates to the RHEL server
        run: |
          cd /var/www/html/test
          git fetch origin main
          git reset --hard origin/main
          echo "Repository updated on the server."
